{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HOME","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Raspirus: Empowering Your Malware Protection</p> <p>Welcome to the official documentation for Raspirus, your lightweight signature-based malware scanner. Originally designed to scan attached USB drives using a Raspberry Pi, Raspirus has evolved into a versatile tool capable of scanning local files and folders as well. Some of its standout features include:</p> <ul> <li>Cost-Free Protection: Raspirus operates solely on donations, ensuring top-notch protection without any financial burden.</li> <li>Tailored Signature Detection: Our custom signature-based approach guarantees accurate identification of malware.</li> <li>Comprehensive File Scans: Raspirus can efficiently scan compressed files, ensuring no threat goes undetected.</li> <li>Privacy Prioritized: Offering a privacy-friendly option, Raspirus keeps your personal information secure.</li> <li>Cross-Platform Convenience: Enjoy the benefits of Raspirus protection on a variety of operating systems.</li> <li>Swift and Dependable: Count on Raspirus for fast and reliable malware detection.</li> <li>Sleek Modern Interface: With user-friendliness at its core, Raspirus boasts a beautiful and intuitive UI.</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#for-regular-users","title":"For Regular Users","text":"<p>Getting started with Raspirus is a breeze. Follow these simple steps:</p> <ol> <li>Visit our website or head to the GitHub release page.</li> <li>Download the executable that matches your operating system.</li> </ol> <p>Note</p> <p>If you plan to use Raspirus on the Raspberry Pi as a standalone application, we have a dedicated guide for it.</p>"},{"location":"#for-developers","title":"For Developers","text":"<p>Are you a developer looking to set up Raspirus? We've got you covered. Check out our comprehensive guides for various operating systems in the Developers section.</p>"},{"location":"#questions","title":"Questions?","text":"<p>Got questions about Raspirus? We're here to help!</p> <ul> <li>Visit our FAQ section for answers to common queries.</li> <li>Join our thriving community on the Discord server to engage with fellow users.</li> <li>If you've encountered a bug, browse the GitHub issues to see if it's already reported.</li> </ul> <p>Thank you for choosing Raspirus for your malware protection needs. Together, we're making the digital world safer for everyone.</p>"},{"location":"contributing/","title":"CONTRIBUTING","text":""},{"location":"contributing/#enhance-the-codebase","title":"Enhance the Codebase","text":"<p>As a developer looking to amplify Raspirus's functionality, your contributions are invaluable. Please adhere to the following guidelines:</p> <ul> <li>Check Existing Issues: Before diving in, peruse existing issues to avoid creating duplicates. If none exist, feel free to open a new one.</li> <li> <p>Documentation is Key: Always ensure your code is well-documented. Remember to adapt tests to maintain code integrity.</p> </li> <li> <p>Read the Code of Conduct</p> </li> </ul>"},{"location":"contributing/#enrich-the-documentation","title":"Enrich the Documentation","text":"<p>Raspirus's documentation is crafted using Markdown and powered by MkDocs and Python. To contribute to the documentation:</p> <ul> <li>Follow the Guide: To begin, set up the documentation on your local machine by following the guide.</li> <li>Material Theme: Our documentation utilizes the Material Theme, which extends Markdown functionality. Discover more about it here.</li> </ul>"},{"location":"contributing/#drive-translations","title":"Drive Translations","text":"<p>Our documentation is multilingual thanks to Crowdin, an intuitive external service. GUI translations are handled via JSON files. Refer to the guide for comprehensive insights.</p>"},{"location":"contributing/#infuse-artwork-and-media","title":"Infuse Artwork and Media","text":"<p>The repository for artwork (logos, banners, etc.) and media (powerpoints, articles, graphs, etc.) is hosted separately at this repository. Feel free to contribute and bolster our visual presence. Note that the current logo and banner were AI-generated due to the lack of artistic expertise.</p>"},{"location":"contributing/#provide-feedback","title":"Provide Feedback","text":"<p>Beyond the above contributions, there are other impactful ways to get involved:</p> <ul> <li>Join Discord: Engage with our community on the Discord server to share valuable feedback and ideas.</li> <li>Consider Donating: If you find value in Raspirus, consider donating to support ongoing development.</li> <li>Spread the Word: A simple yet effective way to contribute is by downloading Raspirus and introducing it to friends.</li> </ul> <p>Thank you for your dedication to Raspirus's growth and improvement. Your involvement is a cornerstone of our success.</p>"},{"location":"developers/","title":"DEVELOPERS","text":""},{"location":"developers/#navigating-the-architecture","title":"Navigating the Architecture","text":"<pre><code>graph LR\n     A[Start] --&gt; B{Scan location specified?};\n     B --&gt; |Yes| C[Start scan];\n     C --&gt; |Start Loop| D[File found];\n     D --&gt; E[Create Hash];\n     E --&gt; F[Compare Hash];\n     F --&gt; G{Hash found in DB?};\n     G --&gt; |Yes| H[Flag as Malware];\n     G --&gt; |No| I[Flag as Safe];\n     H &amp; I --&gt; J[Continue iteration];\n     J --&gt; K{Last file?};\n     K --&gt; |Yes| L[Stop scanner];\n     L --&gt; M[Display Results];\n     K --&gt; |No| N[Start again];\n     N --&gt; D;\n     B --&gt; |No| O[Stop]</code></pre> <p>Raspirus is structured into two integral components: frontend and backend. These components, built using distinct languages and frameworks, are interconnected via a third-party framework called Tauri. This framework not only facilitates communication between the frontend and backend but also enables us to incorporate Rust functions into the frontend. Furthermore, Tauri empowers the distribution of Raspirus across various operating systems.</p>"},{"location":"developers/#starting-your-development-journey","title":"Starting Your Development Journey","text":"WindowsLinuxmacOS <ol> <li>Clone the repository</li> <li>Install Tauri and Prerequisites</li> <li>Install npm</li> <li>Install Next.js with <code>npm install next@latest react@latest react-dom@latest</code></li> <li>Install npm dependencies with: <code>npm i</code></li> <li>Start development with <code>cargo tauri dev</code></li> <li>or build Raspirus with <code>cargo tauri build</code></li> </ol> <ol> <li>Clone the Repository</li> <li>Execute <code>make install</code></li> <li>Run the application with <code>raspirus</code></li> </ol> <ol> <li>Clone the repository</li> <li>Install Tauri and Prerequisites</li> <li>Install npm</li> <li>Install Next.js with <code>npm install next@latest react@latest react-dom@latest</code></li> <li>Install npm dependencies with: <code>npm i</code></li> <li>Start development with <code>cargo tauri dev</code></li> <li>or build Raspirus with <code>cargo tauri build</code></li> </ol> <p>Should you encounter any hiccups during your initial run or build, ensure that you've followed each step diligently. Confirm the accurate creation of both logs and config files.</p>"},{"location":"developers/#exploring-the-backend","title":"Exploring the Backend","text":"<pre><code>classDiagram\n     Main &lt;|-- DBOps\n     Main &lt;|-- Configs\n     Main &lt;|-- FileLogs\n     Main &lt;|-- Scanner\n     Main: +Config config_file\n\n     class DBOps {\n          +Connection db_conn\n          +String db_file\n          +TauriWindow t_win\n          +new()\n          +update_db()\n          +hash_exists()\n     }\n\n     class Configs {\n          +Data data\n          +new()\n          +save()\n          +load()\n     }\n\n     class FileLogs {\n          +File file\n          +log()\n          +create_file()\n     }\n\n     class Scanner {\n          +String scan_loc\n          +DbOps db_ops\n          +Vec malware_list\n          +search_files()\n          +create_hash()\n          +get_folder_size()\n     }</code></pre> <p>The backend, an essential cog in the Raspirus machinery, is meticulously crafted in Rust for superior performance. The primary file houses functions accessible from the frontend, which must yield JSON-compatible outcomes. For a detailed breakdown, reference the graph above outlining the backend's modular arrangement.</p>"},{"location":"developers/#unpacking-the-frontend","title":"Unpacking the Frontend","text":"<p>Our frontend, developed with JavaScript via the Next.js framework, emphasizes user-friendliness and functionality. Comprising components and pages, it mirrors the simplicity and robustness of Next.js. Refer to the illustrated graph above for an approximate visual representation of the frontend's architecture.</p>"},{"location":"developers/#evaluating-test-coverage","title":"Evaluating Test Coverage","text":"<ul> <li>Backend tests, authored in Rust, can be executed via the <code>cargo test</code> command. Access these tests in the tests directory. Check test coverage on Codecov.</li> <li>Frontend tests, created with Selenium, are currently in development.</li> </ul> <p>Thank you for your interest in contributing to Raspirus's development. Your expertise fuels our progress.</p>"},{"location":"faq/","title":"FAQ","text":"App crashes when updating <p>On Windows, it has been observed that the app crashes when attempting to update the database. We are aware of this issue and actively working to resolve it. The problem arises because the update function requires administrative privileges, which Windows does not automatically provide. To temporarily resolve this issue, you can execute the app with administrative privileges. Right-click on the app and select \"Run as administrator\" to launch it with the necessary privileges.</p> Where does the Raspirus logo come from? <p>The logo of the Raspirus app features a red monster named Stuart, who is designed to represent a virus-eating creature. The logo was generated using DALL-E, along with creative image editing and merging. Stuart is a friendly monster, except when he's hungry for viruses. You can find additional media and documents in the dedicated repository. Feel free to use these images to create your own artwork and share them in the discussion boards.</p> My VScode setup is giving me issues <p>The Rust Analyzer plugin in Visual Studio Code searches for a <code>Cargo.toml</code> file in the current directory or its parent directory. To address this issue, you can add an option to the plugin settings and specify the location of your <code>Cargo.toml</code> file.</p> <p>As mentioned in this comment, you can add the following lines to the end of your plugin settings JSON. Afterward, restart the Rust Analyzer for the modifications to take effect.</p> <pre><code>{\n\"rust-analyzer.linkedProjects\": [\n\"/home/stuart/raspirus/raspirus/Cargo.toml\"\n]\n}\n</code></pre> Can't select directories/files <p>Unfortunately, as of this issue with Tauri, we currently can't allow users to select both files and folders. To switch between selecting a single file or folder, you need to change it in the Raspirus settings. There you will find a switch for it.</p> What is obfuscated mode? <p>Raspirus was originally intended for enterprise usage and therefore needed to be privacy-friendly. To ensure that, it added the \"Obfuscation Mode\", which will hide everything, detect malware faster and only display: \"Malware found\" or \"No malware found\". It is on by default, so if you want to know a bit more about your scan, you should probably deactivate it. You can do so in the settings.</p>"},{"location":"guides/","title":"GUIDES","text":""},{"location":"guides/#setting-up-your-local-documentation","title":"Setting Up Your Local Documentation","text":"<p>Easily set up the documentation on your machine with these straightforward steps:</p> <ol> <li>Clone the Repository:    Start by cloning the repository to your local machine using this command:</li> </ol> <pre><code>git clone https://github.com/Raspirus/docs.git\n</code></pre> <ol> <li>Install Python Dependencies:    Navigate to the project directory and install the necessary Python dependencies from the <code>requirements.txt</code> file using this command:</li> </ol> <pre><code>pip install -r requirements.txt\n</code></pre> <ol> <li>Launch the Project Locally:    Begin your local project by executing this command:</li> </ol> <pre><code>mkdocs serve\n</code></pre> <p>This will initiate a development server, allowing you to access the documentation via http://localhost:8000 in your preferred web browser.</p>"},{"location":"guides/#exporting-documentation-to-pdf","title":"Exporting Documentation to PDF","text":"<p>If you prefer an offline PDF version of this documentation, follow these step-by-step instructions:</p> <ol> <li> <p>Follow the setup process outlined above.</p> </li> <li> <p>Build the Documentation:    Employ mkdocs and use the build command: <code>mkdocs build</code>.</p> </li> <li> <p>Access the PDF:    If the process goes smoothly, locate the resulting PDF file named <code>document.pdf</code> within the <code>site/pdf</code> directory.</p> </li> </ol> <p>Please note that the exported PDF may display minor issues with images and iFrames. Nevertheless, the text remains legible and suitable for offline sharing.</p>"},{"location":"guides/#introducing-translations","title":"Introducing Translations","text":"<p>For translations of this documentation, visit Crowdin, a collaborative platform. Translations for UI strings are managed through JSON files. To contribute, craft your translations within the locales folder. Retain the uniqueness of keys when translating from the <code>en.json</code> file.</p>"},{"location":"guides/#scanner-insights","title":"Scanner Insights","text":""},{"location":"guides/#scanning-compressed-files","title":"Scanning Compressed Files","text":"<p>Note</p> <p>This option is not yet available for the Raspberry Pi. see why in the FAQ section</p> <p>While Raspirus defaults to scanning folders, you can alter this behavior via the settings page. By toggling a switch, you can scan individual files, including compressed ones. It's important to note that only one file can be scanned at a time.</p>"},{"location":"guides/#navigating-logs-and-configurations","title":"Navigating Logs and Configurations","text":"<p>In the event of unexpected occurrences or sudden app crashes, examining logs and configurations can provide insights. Locate these files in the following folders, based on your operating system. The ProjectDirs crate stores them at the following location:</p> <p>Config file:</p> Platform Value Example Linux <code>$XDG_DATA_HOME</code>/<code>_project_path_</code> or <code>$HOME</code>/.local/share/<code>_project_path_</code> /home/alice/.local/share/barapp macOS <code>$HOME</code>/Library/Application Support/<code>_project_path_</code> /Users/Alice/Library/Application Support/com.Foo-Corp.Bar-App Windows <code>{FOLDERID_RoamingAppData}</code>\\<code>_project_path_</code>\\data C:\\Users\\Alice\\AppData\\Roaming\\Foo Corp\\Bar App\\data <p>Log files:</p> Platform Value Example Linux <code>$XDG_DATA_HOME</code>/<code>_project_path_</code> or <code>$HOME</code>/.local/share/<code>_project_path_</code> /home/alice/.local/share/barapp macOS <code>$HOME</code>/Library/Application Support/<code>_project_path_</code> /Users/Alice/Library/Application Support/com.Foo-Corp.Bar-App Windows <code>{FOLDERID_LocalAppData}</code>\\<code>_project_path_</code>\\data C:\\Users\\Alice\\AppData\\Local\\Foo Corp\\Bar App\\data <p>Ensure to include these files when reporting bugs, as they greatly assist in troubleshooting.</p>"},{"location":"guides/#github-integration","title":"GitHub Integration","text":""},{"location":"guides/#enriching-the-signature-database","title":"Enriching the Signature Database","text":"<p>COMING SOON</p>"},{"location":"guides/#raspberry-pi-deployment","title":"Raspberry Pi Deployment","text":"<p>Originally tailored for standalone Raspberry Pi deployment with touchscreen functionality (akin to kiosk mode), this project's primary purpose was scanning attached USB drives. While the project's scope has expanded, this feature remains intact. Follow the guide on Tauri and if you encounter any issue with it, make sure to let us know.</p> <p>Thank you for choosing Raspirus as your malware protection solution. These comprehensive guides will ensure your experience is seamless and efficient.</p>"},{"location":"screenshots/","title":"SCREENSHOTS","text":""},{"location":"screenshots/#home","title":"Home","text":""},{"location":"screenshots/#scanning","title":"Scanning","text":""},{"location":"screenshots/#result","title":"Result","text":""},{"location":"screenshots/#raspberry-pi-setup","title":"Raspberry Pi Setup","text":""},{"location":"stars/","title":"STARS","text":""},{"location":"stars/#sponsors","title":"Sponsors","text":"Benjamin Demetz <p>\u2764\ufe0f Maintainer</p>"},{"location":"stars/#contributors","title":"Contributors","text":"Matthias Dieter Walln\u00f6fer <p>\ud83e\uddd1\u200d\ud83c\udfeb Mentoring</p> GamingGuy003 <p>\ud83d\udcbb Backend Developer</p> Zack Amoroso <p>\ud83d\udce6 Linux Tester</p> Paul Guyot <p>\ud83d\udcbb GitHub Action</p>"},{"location":"stars/#special-credits","title":"Special Credits","text":"Lairex59 <p>\ud83d\udca1 Ideas and Support</p>"},{"location":"en/developers/","title":"DEVELOPERS","text":""},{"location":"en/developers/#navigating-the-architecture","title":"Navigating the Architecture","text":"<pre><code>graph LR\n     A[Start] --&gt; B{Scan location specified?};\n     B --&gt; |Yes| C[Start scan];\n     C --&gt; |Start Loop| D[File found];\n     D --&gt; E[Create Hash];\n     E --&gt; F[Compare Hash];\n     F --&gt; G{Hash found in DB?};\n     G --&gt; |Yes| H[Flag as Malware];\n     G --&gt; |No| I[Flag as Safe];\n     H &amp; I --&gt; J[Continue iteration];\n     J --&gt; K{Last file?};\n     K --&gt; |Yes| L[Stop scanner];\n     L --&gt; M[Display Results];\n     K --&gt; |No| N[Start again];\n     N --&gt; D;\n     B --&gt; |No| O[Stop]</code></pre> <p>Raspirus is structured into two integral components: frontend and backend. These components, built using distinct languages and frameworks, are interconnected via a third-party framework called Tauri. This framework not only facilitates communication between the frontend and backend but also enables us to incorporate Rust functions into the frontend. Furthermore, Tauri empowers the distribution of Raspirus across various operating systems.</p>"},{"location":"en/developers/#starting-your-development-journey","title":"Starting Your Development Journey","text":"WindowsLinuxmacOS <ol> <li>Clone the repository</li> <li>Install Tauri and Prerequisites</li> <li>Install npm</li> <li>Install Next.js with <code>npm install next@latest react@latest react-dom@latest</code></li> <li>Install npm dependencies with: <code>npm i</code></li> <li>Start development with <code>cargo tauri dev</code></li> <li>or build Raspirus with <code>cargo tauri build</code></li> </ol> <ol> <li>Clone the Repository</li> <li>Execute <code>make install</code></li> <li>Run the application with <code>raspirus</code></li> </ol> <ol> <li>Clone the repository</li> <li>Install Tauri and Prerequisites</li> <li>Install npm</li> <li>Install Next.js with <code>npm install next@latest react@latest react-dom@latest</code></li> <li>Install npm dependencies with: <code>npm i</code></li> <li>Start development with <code>cargo tauri dev</code></li> <li>or build Raspirus with <code>cargo tauri build</code></li> </ol> <p>Should you encounter any hiccups during your initial run or build, ensure that you've followed each step diligently. Confirm the accurate creation of both logs and config files.</p>"},{"location":"en/developers/#exploring-the-backend","title":"Exploring the Backend","text":"<pre><code>classDiagram\n     Main &lt;|-- DBOps\n     Main &lt;|-- Configs\n     Main &lt;|-- FileLogs\n     Main &lt;|-- Scanner\n     Main: +Config config_file\n\n     class DBOps {\n          +Connection db_conn\n          +String db_file\n          +TauriWindow t_win\n          +new()\n          +update_db()\n          +hash_exists()\n     }\n\n     class Configs {\n          +Data data\n          +new()\n          +save()\n          +load()\n     }\n\n     class FileLogs {\n          +File file\n          +log()\n          +create_file()\n     }\n\n     class Scanner {\n          +String scan_loc\n          +DbOps db_ops\n          +Vec malware_list\n          +search_files()\n          +create_hash()\n          +get_folder_size()\n     }</code></pre> <p>The backend, an essential cog in the Raspirus machinery, is meticulously crafted in Rust for superior performance. The primary file houses functions accessible from the frontend, which must yield JSON-compatible outcomes. For a detailed breakdown, reference the graph above outlining the backend's modular arrangement.</p>"},{"location":"en/developers/#unpacking-the-frontend","title":"Unpacking the Frontend","text":"<p>Our frontend, developed with JavaScript via the Next.js framework, emphasizes user-friendliness and functionality. Comprising components and pages, it mirrors the simplicity and robustness of Next.js. Refer to the illustrated graph above for an approximate visual representation of the frontend's architecture.</p>"},{"location":"en/developers/#evaluating-test-coverage","title":"Evaluating Test Coverage","text":"<ul> <li>Backend tests, authored in Rust, can be executed via the <code>cargo test</code> command. Access these tests in the tests directory. Check test coverage on Codecov.</li> <li>Frontend tests, created with Selenium, are currently in development.</li> </ul> <p>Thank you for your interest in contributing to Raspirus's development. Your expertise fuels our progress.</p>"},{"location":"de/","title":"Zuhause","text":""},{"location":"de/#willkommen-bei-raspirus-docs","title":"Willkommen bei Raspirus Docs","text":""},{"location":"de/#inhalte","title":"Inhalte:","text":"<ul> <li>Einf\u00fchrung</li> <li>Installation</li> <li>Anleitungen</li> <li>FAQ</li> <li>Nutzung und Diagramme</li> <li>Entwicklerbereich<ul> <li>Frontend (Next.JS)</li> <li>Backend (Rost)</li> </ul> </li> <li>Mitwirken<ul> <li>Coding</li> <li>\u00dcbersetzungen</li> </ul> </li> </ul>"},{"location":"de/#einfuhrung","title":"Einf\u00fchrung","text":"<p>Dieses Projektarchiv enth\u00e4lt die gesamte Dokumentation des Raspirus Projekts. Sie befindet sich derzeit in der Entwicklung und daher nicht zu zuverl\u00e4ssig.</p>"},{"location":"de/faq/","title":"FAQ","text":""},{"location":"de/faq/#wie-generiere-ich-die-dokumentation-fur-dieses-projektarchiv","title":"Wie generiere ich die Dokumentation f\u00fcr dieses Projektarchiv?","text":"<p>You can find the generated documentation in the rust folder and in case you want to generate your own, you can do so by using the <code>cargo doc</code> command. Hier sind einige Parameter, die Sie mit ihm verwenden k\u00f6nnen: - <code>--no-deps</code>: Ignoriert Abh\u00e4ngigkeiten, dokumentiert nur den Code selbst - <code>--release</code>: Es ist im Allgemeinen besser als ein Debug - <code>--target-dir</code>: Where to output the docs All together, the command might look something like this: \\   <code>cargo doc --no-deps --release --target-dir=/docs/generated/</code></p>"},{"location":"de/faq/#wie-kann-ich-in-vscode-einen-rust-analyzer-einrichten-der-in-einer-nicht-standardmaigen-verzeichnisstruktur-arbeitet","title":"Wie kann ich in VSCode einen Rust Analyzer einrichten, der in einer nicht-standardm\u00e4\u00dfigen Verzeichnisstruktur arbeitet?","text":"<p>Das Rust Analyzer Plugin in Visual Studio Code versucht nach einer Cargo.toml Datei im aktuellen Verzeichnis oder \u00fcbergeordnetem Verzeichnis zu suchen. But since we packed the entire application in the <code>app</code> directory, it's unable to find the file and therefore might not work. This is a big lost, as it doesn't tell you if your Rust files have correct syntax or not. Um dieses Problem zu l\u00f6sen, k\u00f6nnen Sie dem Plugin eine Option hinzuf\u00fcgen und den Speicherort Ihrer Cargo.toml Datei angeben. As stated in this comment, you need to add the following lines to the end of your plugin settings' JSON. Danach m\u00fcssen Sie auch den Analyzer neu starten, damit die \u00c4nderung wirksam wird.</p> <pre><code>{\n\"rust-analyzer.linkedProjects\": [\n\"/home/matklad/tmp/hello/Cargo.toml\"\n]\n}\n</code></pre>"},{"location":"de/faq/#weitere-demnachst","title":"Weitere demn\u00e4chst","text":"<p>...</p>"},{"location":"de/guides/","title":"Anleitungen","text":""},{"location":"de/guides/#kommt-bald","title":"KOMMT BALD","text":""},{"location":"de/guides/#notizen","title":"Notizen","text":""},{"location":"de/guides/#export-in-pdf","title":"Export in PDF:","text":"<ul> <li>Folgen Sie den Anweisungen f\u00fcr Ihr Betriebssystem hier: https://github.com/orzih/mkdocs-with-pdf#requirements</li> <li>Installieren Sie alle Abh\u00e4ngigkeiten mit Pip mit <code>pip install -r requirements.txt</code></li> <li><code>mkdocs build</code> ausf\u00fchren</li> <li>PDF befindet sich in site/pdf/document.pdf</li> </ul>"},{"location":"de/guides/#ubersetzungen","title":"\u00dcbersetzungen","text":"<ul> <li>Link: https://github.com/ultrabug/mkdocs-static-i18n</li> </ul>"},{"location":"de/installation/","title":"Installation","text":"<p>Diese Anleitung hilft Ihnen beim Aufbau des Projekts auf Ihrem eigenen Rechner.</p>"},{"location":"de/installation/#inhaltsverzeichnis","title":"Inhaltsverzeichnis","text":"<ul> <li>Einf\u00fchrung</li> <li>Einschr\u00e4nkungen</li> <li>Step-by-step guide</li> <li>1. Repository herunterladen</li> <li>2. Rust installieren</li> <li>3. Install NPM</li> <li>4. Next.js installieren</li> <li>5. Tauri installieren</li> <li>6. Projektabh\u00e4ngigkeiten installieren</li> <li> <p>7. Projekt erstellen</p> </li> <li> <p>Conclusion https://github.com/Raspirus/Raspirus/releases</p> </li> </ul>"},{"location":"de/installation/#einfuhrung","title":"Einf\u00fchrung","text":"<p>For people that just want a working app, they can just head over to the Release page and download the executable for the correct platform. But if you are on a different Linux distribution, unsupported OS, or just want to compile the project on your own, this step-by-step guide will guide you.</p>"},{"location":"de/installation/#einschrankungen","title":"Einschr\u00e4nkungen","text":"<ul> <li>Glibc kann unter Linux Probleme verursachen: https://tauri.app/v1/guides/building/linux#limitations</li> <li> <p>You need to use 64-bit systems, else the app might crash because it's using memory improvements that only work there</p> </li> <li> <p>The app is meant to be run as a \"I'm the only app running on this system\" app. This is important regarding RAM usage, because if you have much RAM, it will use much RAM. And if you, for some reason, try to limit the initially available RAM, the app might crash because it doesn't have the promised amount of RAM. (A future version might have a toggle for this)</p> </li> </ul>"},{"location":"de/installation/#step-by-step-guide","title":"Step-by-step guide","text":"<p>Bitte lesen Sie die ganze Anleitung einmal, bevor Sie jeden Schritt ausf\u00fchren!</p>"},{"location":"de/installation/#1-repository-herunterladen","title":"1. Repository herunterladen","text":"<p>Dieser Schritt ist sehr einfach, einfach das ganze Projektarchiv herunterladen, indem Sie auf die gr\u00fcne Schaltfl\u00e4che auf der Homepage dieses Projektarchivs klicken. Optional k\u00f6nnen Sie auch den f\u00fcr eine Ver\u00f6ffentlichung spezifischen Code herunterladen, indem Sie die Release-Seite besuchen und die <code>.zip</code> Datei in den Assets herunterladen. Eine weitere Sache, die Sie vielleicht tun m\u00f6chten, ist dieses Projektarchiv klonen</p>"},{"location":"de/installation/#2-rust-installieren","title":"2. Rust installieren","text":"<p>Eine der Voraussetzungen, um das Projekt zu kompilieren, ist die Installation von Rst. Also make sure that your Rust installation is up-to-date with the command <code>rustup update</code>. You can check if you have Rust installed on your machine with the command <code>rustc --version</code>, if this command fails, head over to the Rust website and follow the instructions for your OS.</p>"},{"location":"de/installation/#3-install-npm","title":"3. Install NPM","text":"<p>NPM wird ben\u00f6tigt, da das Frontend der App auf JavaScript funktioniert und im Grunde eine Webseite ist. Um zu \u00fcberpr\u00fcfen, ob Node.js bereits installiert ist, f\u00fchren Sie die Befehle <code>node -v</code> und <code>npm -v</code> aus. Wenn einer von ihnen fehlschl\u00e4gt, oder Sie feststellen, dass Sie eine \u00e4ltere Version haben auf der NPM-Website installieren, um die neueste Version f\u00fcr Ihr Betriebssystem zu installieren. Wenn du ein WSL verwendest, k\u00f6nnte diese Anleitung f\u00fcr dich n\u00fctzlich sein.</p>"},{"location":"de/installation/#4-nextjs-installieren","title":"4. Next.js installieren","text":"<p>Das Frontend basiert auf JavaScript mit dem bekannten Framework Next.js, es macht die Website-Entwicklung schneller und effizienter. Sie m\u00fcssen auch dieses Tool installieren, um die Anwendung erstellen zu k\u00f6nnen. Aber keine Sorge, Sie k\u00f6nnen dies einfach mit NPM: <code>npm installieren next@latest react@latest react-dom@latest eslint-config-next@latest</code>. Dies wird Next.js, React (die Next.js basiert darauf) und ESLink installieren. Mehr \u00fcber den Installationsprozess erfahren Sie hier.</p>"},{"location":"de/installation/#5-tauri-installieren","title":"5. Tauri installieren","text":"<p>Tauri ist das Framework, das das Ruster Backend mit dem Next.js Frontend verbindet. Es ist ein Open-Source-Projekt von sehr freundlichen und gastfreundlichen Menschen. Unfortunately, installing Tauri is not as straightforward as other processes. Es ist sehr OS abh\u00e4ngig und Sie werden daher sicherstellen, dass Sie die Voraussetzungen vor dem Start erf\u00fcllen. Danach k\u00f6nnen Sie Tauri-cli installieren: <code>Fracht installiert Tauri-cli</code>. Sie k\u00f6nnten auch NPM verwenden, um es zu installieren, aber wir werden haupts\u00e4chlich mit Fracht in dieser kurzen Anleitung arbeiten. Schau dir in seinem FAQ-Bereich an, um zu erfahren, warum NPM f\u00fcr dich vielleicht besser ist.</p>"},{"location":"de/installation/#6-projektabhangigkeiten-installieren","title":"6. Projektabh\u00e4ngigkeiten installieren","text":"<p>Zun\u00e4chst werden wir die Knotenmodule installieren. Um dies zu tun, gehen Sie in das Verzeichnis, das den gesamten Raspirus-Code enth\u00e4lt. \u00d6ffnen Sie das <code>App</code> Verzeichnis, \u00f6ffnen Sie ein Terminal an diesem Ort und f\u00fchren Sie den Befehl <code>npm install</code> aus. Dies kann eine Weile dauern, aber es wird alle notwendigen Module herunterladen. Warning!: On WSL you might get an <code>OpenSSL is missing</code> error, to fix this you need to edit the file <code>app/src-tauri/Cargo.toml</code> and add the following line: <code>openssl-sys = {version = \"0.9.66\", features = [\"vendored\"]}</code> in the <code>[dependencies]</code> section.</p>"},{"location":"de/installation/#7-projekt-erstellen","title":"7. Projekt erstellen","text":"<p>Bevor Sie das Projekt komplett erstellen k\u00f6nnen, gibt es noch eine Sache, die Sie vielleicht \u00fcberpr\u00fcfen m\u00f6chten. To make sure that the Rust part of the project works fine, open the folder <code>app/src-tauri/</code> and execute the command <code>cargo build</code>. Wenn dieser Befehl erfolgreich ist, k\u00f6nnen Sie zum <code>app/</code> Verzeichnis zur\u00fcckkehren. Wenn dieser Befehl fehlschl\u00e4gt, \u00f6ffnen Sie bitte ein Problem in diesem Projektarchiv mit so vielen Informationen wie m\u00f6glich. Wenn alles gut gelaufen ist, befinden Sie sich jetzt im <code>App</code> Verzeichnis, und Sie k\u00f6nnen sicher den Befehl <code>cargo tauri build</code> ausf\u00fchren. Dieser Befehl erstellt die gesamte Anwendung und zeigt am Ende des Prozesses einen Pfad an, der Ihnen zeigt, wo sich die ausf\u00fchrbare Datei befindet. Standardm\u00e4\u00dfig sollten Sie es im <code>app\\src-tauri\\target\\release</code> Ordner finden k\u00f6nnen.</p>"},{"location":"de/installation/#schlussfolgerung","title":"Schlussfolgerung","text":"<p>Diese Anwendung ist im Grunde eine Website, die mit einigen Rust Code verbunden und mit dem Tauri Framework verpackt ist. Es wird daher ein grafisches Overlay ben\u00f6tigen, um die Website zu starten und anzuzeigen. Dieses Projekt befindet sich in st\u00e4ndiger Entwicklung und wenn Sie etwas Ungew\u00f6hnliches finden, haben Sie einige gute Ideen oder finden Sie einige Fehler, haben Sie keine Angst, ein Problem auf diesem Repository zu \u00f6ffnen und ich werde Ihnen gerne helfen.</p>"},{"location":"de/usage/","title":"Auslastung","text":""},{"location":"de/usage/#kommt-bald","title":"KOMMT BALD","text":""},{"location":"de/contributing/","title":"Beitr\u00e4ge","text":"<p>Dieses Projekt ist komplett Open-Source und w\u00e4re ohne Ihre Hilfe nicht m\u00f6glich. Every contribution even if just a little can help a lot. Opening an issue if you find a bug, fixing the bug by opening a pull-request, adding translations, adding features and much more are all types of contributions that help the project go forward.</p>"},{"location":"de/contributing/#ubersetzungen","title":"\u00dcbersetzungen","text":"<p>The app itself is made with user-friendliness in mind and therefore doesn't have much text to translate as we want the experience to be fast without slowing down the user by forcing him/her to read lots of stuff. Nonetheless, this project still needs a lot of translators. Foremost we need translators for the docs that you are reading right now, but the app also needs translators. \u00dcbersetzungen helfen die Benutzererfahrung zu verbessern und das Projekt breiter zug\u00e4nglich zu machen. You can find out more on the dedicated page.</p>"},{"location":"de/contributing/#coding","title":"Coding","text":"<p>Die App wird haupts\u00e4chlich aus zwei Programmiersprachen gebaut: Rust und JavaScript. JavaScript is used for the frontend to build a website using the Next.JS framework and make the app look nicer and be cross-platform. The backend on the other side is written in Rust because we value speed a lot when scanning files and therefore need a fast language. To make the two communicate we use the Tauri framework. Tauri ist ein in Rust geschriebenes Open-Source-Framework, ganz neu in seinem Bereich. In Zukunft gibt es auch einen Plan, einen Python-Installer hinzuzuf\u00fcgen. If you have knowledge in any of these fields you are more than welcome to contribute to the project. Sie k\u00f6nnen dieses Projekt nat\u00fcrlich auch als Beispiel verwenden, um Ihr eigenes Projekt zu erstellen.</p>"},{"location":"de/contributing/#sponsoring","title":"Sponsoring","text":"<p>KOMMT BALD</p>"},{"location":"de/contributing/coding/","title":"Code","text":""},{"location":"de/contributing/coding/#kommt-bald","title":"KOMMT BALD","text":""},{"location":"de/contributing/translations/","title":"\u00dcbersetzungen","text":"<p>\u00dcbersetzungen sind sehr wichtig und k\u00f6nnen anderen Menschen helfen, die App einfacher zu verstehen und sie umfassender zur Verf\u00fcgung zu stellen. If you know a language outside of English and would like to add your translations you can do so in two ways: The first one is to translate the documentation, the second one is to translate the frontend strings.</p>"},{"location":"de/contributing/translations/#code-wird-ubersetzt","title":"Code wird \u00fcbersetzt","text":"<p>Es handelt sich um eine laufende Arbeit, die jedoch im Wesentlichen auf eine von zwei m\u00f6glichen Wegen erfolgen wird:</p>"},{"location":"de/contributing/translations/#ubersetzungsdatei","title":"\u00dcbersetzungsdatei","text":"<p>Es gibt eine \u00dcbersetzungsdatei im JSON-Format f\u00fcr jede einzelne Sprache. So the app would load the strings it needs from that file. This is a bit easier to implement for the developers, but not very efficient or great for translators, as it involves forking the repository.</p>"},{"location":"de/contributing/translations/#ubersetzungsdienst","title":"\u00dcbersetzungsdienst","text":"<p>Wir verwenden einen externen \u00dcbersetzungsdienst, um das Projekt zu \u00fcbersetzen. This option would allow translators to just translate the given strings and have an overview of how much has been translated and what still needs to be translated. Dies w\u00e4re die bevorzugte Option, aber die Kehrseite ist das Setup f\u00fcr diese Option. Since we don't know which service to use yet, this option will be added in the future when we have more concrete ideas and hopefully a bigger team. Wir werden wahrscheinlich Crowdin verwenden</p>"},{"location":"de/contributing/translations/#ubersetzungen-von-docs","title":"\u00dcbersetzungen von Docs","text":"<p>The docs you are reading right now also need translations and will require a much bigger effort than translating strings used on the frontend. Die Dokumentation ist ziemlich gro\u00df und kann daher einige Zeit in Anspruch nehmen, um zu \u00fcbersetzen. Als obige Option k\u00f6nnten wir den Service auch hier nutzen, aber das wird in Zukunft hinzugef\u00fcgt werden. If you want to start adding translations right away, I would suggest to do the following:</p> <ol> <li>Fork this repository: You can follow a guide online on how to do it properly.</li> <li>Enter the <code>docs</code> folder and, if the language you want to translate doesn't exist yet, add a new directory whose name is the name of the language you want to write translations for. For example, it would be <code>it</code> for italian, <code>de</code> for german and so on.</li> <li>Then change to that directory and edit the Markdown files inside that directory. Make sure you keep the original folder structure.</li> <li>Nachdem Sie die Bearbeitung abgeschlossen haben, speichern Sie Ihre Dateien und laden sie auf GitHub in Ihren Fork hoch. Mache einen GitHub Commit</li> <li>Jetzt k\u00f6nnen Sie eine Pull-Request in das urspr\u00fcngliche Projektarchiv \u00f6ffnen und verlangen, dass Ihre \u00c4nderungen dem Hauptprojekt hinzugef\u00fcgt werden.</li> <li>Jemand des Teams wird die \u00dcbersetzungen pr\u00fcfen und wenn akzeptiert, diese dem Hauptprojekt hinzuf\u00fcgen.</li> </ol> <p>In the future we hopefully have an external service that handles all this for you, so that you can focus on your translations without distractions. Wir werden wahrscheinlich Crowdin verwenden.</p>"},{"location":"de/developers/","title":"Entwickler","text":"<p>Das Raspirus-Projekt verwendet haupts\u00e4chlich zwei verschiedene Programmiersprachen und Frameworks. Eine f\u00fcr das Backend und eine f\u00fcr das Backend und eine f\u00fcr das Frontend. \\ Das Frontend wird unter Verwendung des Next.JS Frameworks in JavaScript geschrieben. Das Backend auf der anderen Seite ist in Rust geschrieben. The communication between these two programming languages is made using the Tauri framework. Using this framework one can write functions in Rust and call them from the frontend easily.</p>"},{"location":"de/developers/backend/","title":"Backend","text":""},{"location":"de/developers/backend/#kommt-bald","title":"KOMMT BALD","text":""},{"location":"de/developers/frontend/","title":"Frontend","text":""},{"location":"de/developers/frontend/#kommt-bald","title":"KOMMT BALD","text":""},{"location":"it/#benvenuti-a-raspirus-docs","title":"Benvenuti a Raspirus Docs","text":""},{"location":"it/#contenuto","title":"Contenuto:","text":"<ul> <li>Introduzione</li> <li>Installazione</li> <li>Guide</li> <li>FAQ</li> <li>Uso e diagrammi</li> <li>Sezione Sviluppatori<ul> <li>Frontend (Next.JS)</li> <li>Backend (Rust)</li> </ul> </li> <li>Contribuire<ul> <li>Coding</li> <li>Traduzioni</li> </ul> </li> </ul>"},{"location":"it/#introduzione","title":"Introduzione","text":"<p>Questo repository contiene tutta la documentazione del progetto Raspirus. Attualmente \u00e8 in fase di sviluppo e quindi non \u00e8 troppo affidabile.</p>"},{"location":"it/faq/","title":"FAQ","text":""},{"location":"it/faq/#come-posso-generare-la-documentazione-per-questo-repository","title":"Come posso generare la documentazione per questo repository?","text":"<p>You can find the generated documentation in the rust folder and in case you want to generate your own, you can do so by using the <code>cargo doc</code> command. Ecco alcuni parametri che potresti voler utilizzare con esso: - <code>--no-deps</code>: Ignora le dipendenze, documenta solo il codice stesso - <code>--release</code>: Generalmente \u00e8 meglio di un debug - <code>--target-dir</code>: Where to output the docs All together, the command might look something like this: \\   <code>cargo doc --no-deps --release --target-dir=/docs/generated/</code></p>"},{"location":"it/faq/#in-vscode-come-posso-impostare-lanalizzatore-di-rust-per-lavorare-nella-struttura-di-directory-non-standard","title":"In VSCode, come posso impostare l'analizzatore di Rust per lavorare nella struttura di directory non standard?","text":"<p>Il plugin dell'analizzatore Rust in Visual Studio Code cerca di cercare un file Cargo.toml nella directory corrente o nella directory principale. But since we packed the entire application in the <code>app</code> directory, it's unable to find the file and therefore might not work. This is a big lost, as it doesn't tell you if your Rust files have correct syntax or not. Per risolvere questo problema, \u00e8 possibile aggiungere un'opzione al plugin e specificare la posizione del file Cargo.toml. As stated in this comment, you need to add the following lines to the end of your plugin settings' JSON. In seguito, dovrai anche riavviare l'analizzatore per rendere effettiva la modifica.</p> <pre><code>{\n\"rust-analyzer.linkedProjects\": [\n\"/home/matklad/tmp/hello/Cargo.toml\"\n]\n}\n</code></pre>"},{"location":"it/faq/#piu-presto-in-arrivo","title":"Pi\u00f9 presto in arrivo","text":"<p>...</p>"},{"location":"it/guides/","title":"Guide","text":""},{"location":"it/guides/#comando-suono","title":"COMANDO SUONO","text":""},{"location":"it/guides/#note","title":"Note","text":""},{"location":"it/guides/#esporta-in-pdf","title":"Esporta in PDF:","text":"<ul> <li>Segui le istruzioni per il tuo sistema operativo qui: https://github.com/orzih/mkdocs-with-pdf#requirements</li> <li>Installa tutte le dipendenze usando pip con <code>pip install -r requirements.txt</code></li> <li>Esegue <code>mkdocs build</code></li> <li>PDF si trova in sito/pdf/document.pdf</li> </ul>"},{"location":"it/guides/#traduzioni","title":"Traduzioni","text":"<ul> <li>Link: https://github.com/ultrabug/mkdocs-static-i18n</li> </ul>"},{"location":"it/installation/","title":"Installazione","text":"<p>Questa guida vi aiuter\u00e0 a costruire il progetto sulla vostra macchina.</p>"},{"location":"it/installation/#tabella-dei-contenuti","title":"Tabella dei contenuti","text":"<ul> <li>Introduzione</li> <li>Limitazioni</li> <li>Step-by-step guide</li> <li>1. Scarica il repository</li> <li>2. Installa Rust</li> <li>3. Install NPM</li> <li>4. Installa Next.js</li> <li>5. Installa Tauri</li> <li>6. Installa dipendenze progetto</li> <li> <p>7. Genera il progetto</p> </li> <li> <p>Conclusion https://github.com/Raspirus/Raspirus/releases</p> </li> </ul>"},{"location":"it/installation/#introduzione","title":"Introduzione","text":"<p>For people that just want a working app, they can just head over to the Release page and download the executable for the correct platform. But if you are on a different Linux distribution, unsupported OS, or just want to compile the project on your own, this step-by-step guide will guide you.</p>"},{"location":"it/installation/#limitazioni","title":"Limitazioni","text":"<ul> <li>Glibc pu\u00f2 causare problemi su Linux: https://tauri.app/v1/guides/building/linux#limitations</li> <li> <p>You need to use 64-bit systems, else the app might crash because it's using memory improvements that only work there</p> </li> <li> <p>The app is meant to be run as a \"I'm the only app running on this system\" app. This is important regarding RAM usage, because if you have much RAM, it will use much RAM. And if you, for some reason, try to limit the initially available RAM, the app might crash because it doesn't have the promised amount of RAM. (A future version might have a toggle for this)</p> </li> </ul>"},{"location":"it/installation/#step-by-step-guide","title":"Step-by-step guide","text":"<p>Si prega di leggere l'intera guida una volta prima di iniziare ad eseguire ogni passaggio!</p>"},{"location":"it/installation/#1-scarica-il-repository","title":"1. Scarica il repository","text":"<p>Questo passaggio \u00e8 molto semplice, basta scaricare l'intero repository facendo clic sul pulsante verde sulla homepage di questo repository. Facoltativamente, \u00e8 anche possibile scaricare codice specifico per una Rilascio, visitando la pagina Rilasciare e scaricare il file <code>.zip</code> negli asset. Un'altra cosa che potresti voler fare \u00e8 clonare questo repository</p>"},{"location":"it/installation/#2-installa-rust","title":"2. Installa Rust","text":"<p>Uno dei requisiti per compilare il progetto \u00e8 quello di avere installato Rust. Also make sure that your Rust installation is up-to-date with the command <code>rustup update</code>. You can check if you have Rust installed on your machine with the command <code>rustc --version</code>, if this command fails, head over to the Rust website and follow the instructions for your OS.</p>"},{"location":"it/installation/#3-install-npm","title":"3. Install NPM","text":"<p>NPM \u00e8 necessario perch\u00e9 il frontend dell'applicazione funziona su JavaScript ed \u00e8 fondamentalmente un sito web. Per verificare se hai gi\u00e0 installato Node.js, prova ad eseguire i comandi: <code>node -v</code> e <code>npm -v</code>. Se qualcuno di loro fallisce, o si scopre che hai una versione pi\u00f9 vecchia, vai sul sito web NPM per installare l'ultima versione per il tuo sistema operativo. Se stai usando un WSL, questa guida potrebbe essere utile per te.</p>"},{"location":"it/installation/#4-installa-nextjs","title":"4. Installa Next.js","text":"<p>Il frontend \u00e8 costruito su JavaScript utilizzando un noto framework chiamato Next.js, rende lo sviluppo del sito Web pi\u00f9 veloce ed efficiente. Sar\u00e0 necessario installare anche questo strumento per essere in grado di costruire l'applicazione. Ma non ti preoccupare, puoi farlo facilmente con NPM: <code>npm install next@latest react@latest react-dom@latest eslint-config-next@latest</code>. Questo installer\u00e0 Next.js, React (che Next.js \u00e8 basato su) e ESLint. Puoi saperne di pi\u00f9 sul processo di installazione qui.</p>"},{"location":"it/installation/#5-installa-tauri","title":"5. Installa Tauri","text":"<p>Tauri \u00e8 il framework che collega il backend Rust con il frontend Next.js. Si tratta di un progetto open-source realizzato da persone molto cordiale e accogliente. Unfortunately, installing Tauri is not as straightforward as other processes. \u00c8 molto dipendente dal sistema operativo, e quindi ti assicurerai di soddisfare i Prerequisiti prima di iniziare. In seguito, \u00e8 possibile installare Tauri suing cargo: <code>cargo install tauri-cli</code>. Si potrebbe anche utilizzare NPM per installarlo, ma lavoreremo principalmente con il carico in questa breve guida. Scopri la loro sezione FAQ per sapere perch\u00e9 NPM potrebbe essere migliore per te.</p>"},{"location":"it/installation/#6-installa-dipendenze-progetto","title":"6. Installa dipendenze progetto","text":"<p>In primo luogo, installeremo i moduli del nodo. Per fare questo, vai alla directory che contiene tutto il codice Raspirus. Apri la directory <code>app</code> , apri un terminale in questa posizione ed esegui il comando: <code>npm install</code>. Questo potrebbe richiedere un po ', ma scaricher\u00e0 tutti i moduli necessari. Warning!: On WSL you might get an <code>OpenSSL is missing</code> error, to fix this you need to edit the file <code>app/src-tauri/Cargo.toml</code> and add the following line: <code>openssl-sys = {version = \"0.9.66\", features = [\"vendored\"]}</code> in the <code>[dependencies]</code> section.</p>"},{"location":"it/installation/#7-genera-il-progetto","title":"7. Genera il progetto","text":"<p>Prima di poter costruire completamente il progetto, c'\u00e8 ancora una cosa che potresti voler controllare. To make sure that the Rust part of the project works fine, open the folder <code>app/src-tauri/</code> and execute the command <code>cargo build</code>. Se questo comando ha successo, puoi tornare alla directory <code>app/</code>. Se questo comando fallisce, si prega di aprire un problema su questo repository con il maggior numero possibile di informazioni sull'errore. Se tutto \u00e8 andato bene, ora sei nella directory <code>app</code> , ed \u00e8 possibile eseguire in modo sicuro il comando <code>cargo tauri build</code>. Questo comando generer\u00e0 l'intera applicazione e mostrer\u00e0 un percorso alla fine del processo mostrandoti dove si trova l'eseguibile. Per impostazione predefinita, dovresti essere in grado di trovarlo nella cartella <code>app\\src-tauri\\target\\release</code>.</p>"},{"location":"it/installation/#conclusione","title":"Conclusione","text":"<p>Questa applicazione \u00e8 fondamentalmente un sito web collegato ad alcuni codici Rust e confezionato con il framework Tauri. Sar\u00e0 quindi necessaria una sovrapposizione grafica per avviare e visualizzare il sito web. Questo progetto \u00e8 in costante sviluppo e quindi, se si trova qualcosa di insolito, avere alcune buone idee o trovare alcuni errori, non abbiate paura di aprire un problema su questo repository e sar\u00f2 felice di aiutarvi.</p>"},{"location":"it/usage/","title":"Utilizzo","text":""},{"location":"it/usage/#comando-suono","title":"COMANDO SUONO","text":""},{"location":"it/contributing/","title":"Contributi","text":"<p>Questo progetto \u00e8 completamente open-source e non sarebbe possibile senza il vostro aiuto. Every contribution even if just a little can help a lot. Opening an issue if you find a bug, fixing the bug by opening a pull-request, adding translations, adding features and much more are all types of contributions that help the project go forward.</p>"},{"location":"it/contributing/#traduzioni","title":"Traduzioni","text":"<p>The app itself is made with user-friendliness in mind and therefore doesn't have much text to translate as we want the experience to be fast without slowing down the user by forcing him/her to read lots of stuff. Nonetheless, this project still needs a lot of translators. Foremost we need translators for the docs that you are reading right now, but the app also needs translators. Le traduzioni aiutano a migliorare l'esperienza utente e a rendere il progetto pi\u00f9 ampiamente disponibile. You can find out more on the dedicated page.</p>"},{"location":"it/contributing/#coding","title":"Coding","text":"<p>L'app \u00e8 costruita utilizzando principalmente due linguaggi di programmazione: Rust e JavaScript. JavaScript is used for the frontend to build a website using the Next.JS framework and make the app look nicer and be cross-platform. The backend on the other side is written in Rust because we value speed a lot when scanning files and therefore need a fast language. To make the two communicate we use the Tauri framework. Tauri \u00e8 un framework open-source scritto in Rust, abbastanza nuovo nel suo campo. In futuro c'\u00e8 anche un piano per aggiungere un programma di installazione Python. If you have knowledge in any of these fields you are more than welcome to contribute to the project. Ovviamente puoi anche usare questo progetto come esempio per creare il tuo progetto.</p>"},{"location":"it/contributing/#sponsorizzazione","title":"Sponsorizzazione","text":"<p>COMANDO SUONO</p>"},{"location":"it/contributing/coding/","title":"Codice","text":""},{"location":"it/contributing/coding/#comando-suono","title":"COMANDO SUONO","text":""},{"location":"it/contributing/translations/","title":"Traduzioni","text":"<p>Le traduzioni sono molto importanti e possono aiutare altre persone a capire l'app pi\u00f9 facile e renderla pi\u00f9 ampia. If you know a language outside of English and would like to add your translations you can do so in two ways: The first one is to translate the documentation, the second one is to translate the frontend strings.</p>"},{"location":"it/contributing/translations/#tradurre-il-codice","title":"Tradurre il codice","text":"<p>Si tratta di un lavoro in corso, ma essenzialmente sar\u00e0 realizzato in uno dei due modi possibili:</p>"},{"location":"it/contributing/translations/#file-di-traduzione","title":"File di traduzione","text":"<p>C'\u00e8 un file di traduzione in formato JSON per ogni lingua differente. So the app would load the strings it needs from that file. This is a bit easier to implement for the developers, but not very efficient or great for translators, as it involves forking the repository.</p>"},{"location":"it/contributing/translations/#servizio-di-traduzione","title":"Servizio di traduzione","text":"<p>Utilizziamo un servizio di traduzioni esterne per tradurre il progetto. This option would allow translators to just translate the given strings and have an overview of how much has been translated and what still needs to be translated. Questa sarebbe l'opzione preferita, ma il lato negativo \u00e8 la configurazione di questa opzione. Since we don't know which service to use yet, this option will be added in the future when we have more concrete ideas and hopefully a bigger team. Probabilmente useremo Crowdin</p>"},{"location":"it/contributing/translations/#tradurre-documenti","title":"Tradurre Documenti","text":"<p>The docs you are reading right now also need translations and will require a much bigger effort than translating strings used on the frontend. La documentazione \u00e8 abbastanza grande e pu\u00f2 quindi richiedere un bel po' di tempo per tradurre. Come opzione di cui sopra, potremmo utilizzare il servizio anche qui, ma questo sar\u00e0 aggiunto in futuro. If you want to start adding translations right away, I would suggest to do the following:</p> <ol> <li>Fork this repository: You can follow a guide online on how to do it properly.</li> <li>Enter the <code>docs</code> folder and, if the language you want to translate doesn't exist yet, add a new directory whose name is the name of the language you want to write translations for. For example, it would be <code>it</code> for italian, <code>de</code> for german and so on.</li> <li>Then change to that directory and edit the Markdown files inside that directory. Make sure you keep the original folder structure.</li> <li>Dopo aver completato la modifica, salvare i file e caricarli sul tuo fork su GitHub. Fondamentalmente fai un commit di GitHub</li> <li>Ora puoi aprire una pull-request al repository originale e richiedere che le tue modifiche vengano aggiunte al progetto principale.</li> <li>Qualcuno del team esaminer\u00e0 le traduzioni e, se accettato, le aggiunger\u00e0 al progetto principale.</li> </ol> <p>In the future we hopefully have an external service that handles all this for you, so that you can focus on your translations without distractions. Probabilmente useremo Crowdin.</p>"},{"location":"it/developers/","title":"Sviluppatori","text":"<p>Il progetto Raspirus utilizza principalmente due linguaggi di programmazione e quadri diversi. Uno per il backend e uno per il backend e uno per il frontend. \\ Il frontend \u00e8 scritto in JavaScript utilizzando il framework Next.JS. Il backend sull'altro lato \u00e8 scritto in Rust. The communication between these two programming languages is made using the Tauri framework. Using this framework one can write functions in Rust and call them from the frontend easily.</p>"},{"location":"it/developers/backend/","title":"Backend","text":""},{"location":"it/developers/backend/#comando-suono","title":"COMANDO SUONO","text":""},{"location":"it/developers/frontend/","title":"Frontend","text":""},{"location":"it/developers/frontend/#comando-suono","title":"COMANDO SUONO","text":""}]}